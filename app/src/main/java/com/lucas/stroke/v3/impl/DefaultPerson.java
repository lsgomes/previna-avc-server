package com.lucas.stroke.v3.impl;

import com.lucas.stroke.v3.*;


import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultPerson <br>
 * @version generated on Sun Mar 05 19:13:36 BRT 2017 by dossluca
 */
public class DefaultPerson extends WrappedIndividualImpl implements Person {

    public DefaultPerson(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.semanticweb.org/lucas/ontologies/2016/9/stroke#hasDevice
     */
     
    public Collection<? extends Device> getHasDevice() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASDEVICE,
                                               DefaultDevice.class);
    }

    public boolean hasHasDevice() {
	   return !getHasDevice().isEmpty();
    }

    public void addHasDevice(Device newHasDevice) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASDEVICE,
                                       newHasDevice);
    }

    public void removeHasDevice(Device oldHasDevice) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASDEVICE,
                                          oldHasDevice);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/lucas/ontologies/2016/9/stroke#hasLogin
     */
     
    public Collection<? extends Login> getHasLogin() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASLOGIN,
                                               DefaultLogin.class);
    }

    public boolean hasHasLogin() {
	   return !getHasLogin().isEmpty();
    }

    public void addHasLogin(Login newHasLogin) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASLOGIN,
                                       newHasLogin);
    }

    public void removeHasLogin(Login oldHasLogin) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASLOGIN,
                                          oldHasLogin);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/lucas/ontologies/2016/9/stroke#hasRiskFactor
     */
     
    public Collection<? extends RiskFactor> getHasRiskFactor() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASRISKFACTOR,
                                               DefaultRiskFactor.class);
    }

    public boolean hasHasRiskFactor() {
	   return !getHasRiskFactor().isEmpty();
    }

    public void addHasRiskFactor(RiskFactor newHasRiskFactor) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASRISKFACTOR,
                                       newHasRiskFactor);
    }

    public void removeHasRiskFactor(RiskFactor oldHasRiskFactor) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASRISKFACTOR,
                                          oldHasRiskFactor);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/lucas/ontologies/2016/9/stroke#hasSex
     */
     
    public Collection<? extends Sex> getHasSex() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASSEX,
                                               DefaultSex.class);
    }

    public boolean hasHasSex() {
	   return !getHasSex().isEmpty();
    }

    public void addHasSex(Sex newHasSex) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASSEX,
                                       newHasSex);
    }

    public void removeHasSex(Sex oldHasSex) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASSEX,
                                          oldHasSex);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/lucas/ontologies/2016/9/stroke#hasAge
     */
     
    public Collection<? extends Integer> getHasAge() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASAGE, Integer.class);
    }

    public boolean hasHasAge() {
		return !getHasAge().isEmpty();
    }

    public void addHasAge(Integer newHasAge) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASAGE, newHasAge);
    }

    public void removeHasAge(Integer oldHasAge) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASAGE, oldHasAge);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/lucas/ontologies/2016/9/stroke#hasName
     */
     
    public Collection<? extends String> getHasName() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASNAME, String.class);
    }

    public boolean hasHasName() {
		return !getHasName().isEmpty();
    }

    public void addHasName(String newHasName) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASNAME, newHasName);
    }

    public void removeHasName(String oldHasName) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASNAME, oldHasName);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/lucas/ontologies/2016/9/stroke#hasRiskLevel
     */
     
    public Collection<? extends Object> getHasRiskLevel() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASRISKLEVEL, Object.class);
    }

    public boolean hasHasRiskLevel() {
		return !getHasRiskLevel().isEmpty();
    }

    public void addHasRiskLevel(Object newHasRiskLevel) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASRISKLEVEL, newHasRiskLevel);
    }

    public void removeHasRiskLevel(Object oldHasRiskLevel) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASRISKLEVEL, oldHasRiskLevel);
    }


}
