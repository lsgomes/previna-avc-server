package com.lucas.stroke.v3.impl;

import com.lucas.stroke.v3.*;


import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultLogin <br>
 * @version generated on Sun Mar 05 19:13:36 BRT 2017 by dossluca
 */
public class DefaultLogin extends WrappedIndividualImpl implements Login {

    public DefaultLogin(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Data Property http://www.semanticweb.org/lucas/ontologies/2016/9/stroke#hasUserName
     */
     
    public Collection<? extends String> getHasUserName() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASUSERNAME, String.class);
    }

    public boolean hasHasUserName() {
		return !getHasUserName().isEmpty();
    }

    public void addHasUserName(String newHasUserName) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASUSERNAME, newHasUserName);
    }

    public void removeHasUserName(String oldHasUserName) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASUSERNAME, oldHasUserName);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/lucas/ontologies/2016/9/stroke#hasUserPassword
     */
     
    public Collection<? extends String> getHasUserPassword() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASUSERPASSWORD, String.class);
    }

    public boolean hasHasUserPassword() {
		return !getHasUserPassword().isEmpty();
    }

    public void addHasUserPassword(String newHasUserPassword) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASUSERPASSWORD, newHasUserPassword);
    }

    public void removeHasUserPassword(String oldHasUserPassword) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASUSERPASSWORD, oldHasUserPassword);
    }


}
