package com.lucas.stroke.v3;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Wearable <br>
 * @version generated on Sun Mar 05 19:13:36 BRT 2017 by dossluca
 */

public interface Wearable extends Device {

    /* ***************************************************
     * Property http://www.semanticweb.org/lucas/ontologies/2016/9/stroke#hasSensor
     */
     
    /**
     * Gets all property values for the hasSensor property.<p>
     * 
     * @returns a collection of values for the hasSensor property.
     */
    Collection<? extends Sensor> getHasSensor();

    /**
     * Checks if the class has a hasSensor property value.<p>
     * 
     * @return true if there is a hasSensor property value.
     */
    boolean hasHasSensor();

    /**
     * Adds a hasSensor property value.<p>
     * 
     * @param newHasSensor the hasSensor property value to be added
     */
    void addHasSensor(Sensor newHasSensor);

    /**
     * Removes a hasSensor property value.<p>
     * 
     * @param oldHasSensor the hasSensor property value to be removed.
     */
    void removeHasSensor(Sensor oldHasSensor);


    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
