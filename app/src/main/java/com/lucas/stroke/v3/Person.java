package com.lucas.stroke.v3;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Person <br>
 * @version generated on Sun Mar 05 19:13:36 BRT 2017 by dossluca
 */

public interface Person extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.semanticweb.org/lucas/ontologies/2016/9/stroke#hasDevice
     */
     
    /**
     * Gets all property values for the hasDevice property.<p>
     * 
     * @returns a collection of values for the hasDevice property.
     */
    Collection<? extends Device> getHasDevice();

    /**
     * Checks if the class has a hasDevice property value.<p>
     * 
     * @return true if there is a hasDevice property value.
     */
    boolean hasHasDevice();

    /**
     * Adds a hasDevice property value.<p>
     * 
     * @param newHasDevice the hasDevice property value to be added
     */
    void addHasDevice(Device newHasDevice);

    /**
     * Removes a hasDevice property value.<p>
     * 
     * @param oldHasDevice the hasDevice property value to be removed.
     */
    void removeHasDevice(Device oldHasDevice);


    /* ***************************************************
     * Property http://www.semanticweb.org/lucas/ontologies/2016/9/stroke#hasLogin
     */
     
    /**
     * Gets all property values for the hasLogin property.<p>
     * 
     * @returns a collection of values for the hasLogin property.
     */
    Collection<? extends Login> getHasLogin();

    /**
     * Checks if the class has a hasLogin property value.<p>
     * 
     * @return true if there is a hasLogin property value.
     */
    boolean hasHasLogin();

    /**
     * Adds a hasLogin property value.<p>
     * 
     * @param newHasLogin the hasLogin property value to be added
     */
    void addHasLogin(Login newHasLogin);

    /**
     * Removes a hasLogin property value.<p>
     * 
     * @param oldHasLogin the hasLogin property value to be removed.
     */
    void removeHasLogin(Login oldHasLogin);


    /* ***************************************************
     * Property http://www.semanticweb.org/lucas/ontologies/2016/9/stroke#hasRiskFactor
     */
     
    /**
     * Gets all property values for the hasRiskFactor property.<p>
     * 
     * @returns a collection of values for the hasRiskFactor property.
     */
    Collection<? extends RiskFactor> getHasRiskFactor();

    /**
     * Checks if the class has a hasRiskFactor property value.<p>
     * 
     * @return true if there is a hasRiskFactor property value.
     */
    boolean hasHasRiskFactor();

    /**
     * Adds a hasRiskFactor property value.<p>
     * 
     * @param newHasRiskFactor the hasRiskFactor property value to be added
     */
    void addHasRiskFactor(RiskFactor newHasRiskFactor);

    /**
     * Removes a hasRiskFactor property value.<p>
     * 
     * @param oldHasRiskFactor the hasRiskFactor property value to be removed.
     */
    void removeHasRiskFactor(RiskFactor oldHasRiskFactor);


    /* ***************************************************
     * Property http://www.semanticweb.org/lucas/ontologies/2016/9/stroke#hasSex
     */
     
    /**
     * Gets all property values for the hasSex property.<p>
     * 
     * @returns a collection of values for the hasSex property.
     */
    Collection<? extends Sex> getHasSex();

    /**
     * Checks if the class has a hasSex property value.<p>
     * 
     * @return true if there is a hasSex property value.
     */
    boolean hasHasSex();

    /**
     * Adds a hasSex property value.<p>
     * 
     * @param newHasSex the hasSex property value to be added
     */
    void addHasSex(Sex newHasSex);

    /**
     * Removes a hasSex property value.<p>
     * 
     * @param oldHasSex the hasSex property value to be removed.
     */
    void removeHasSex(Sex oldHasSex);


    /* ***************************************************
     * Property http://www.semanticweb.org/lucas/ontologies/2016/9/stroke#hasAge
     */
     
    /**
     * Gets all property values for the hasAge property.<p>
     * 
     * @returns a collection of values for the hasAge property.
     */
    Collection<? extends Integer> getHasAge();

    /**
     * Checks if the class has a hasAge property value.<p>
     * 
     * @return true if there is a hasAge property value.
     */
    boolean hasHasAge();

    /**
     * Adds a hasAge property value.<p>
     * 
     * @param newHasAge the hasAge property value to be added
     */
    void addHasAge(Integer newHasAge);

    /**
     * Removes a hasAge property value.<p>
     * 
     * @param oldHasAge the hasAge property value to be removed.
     */
    void removeHasAge(Integer oldHasAge);



    /* ***************************************************
     * Property http://www.semanticweb.org/lucas/ontologies/2016/9/stroke#hasName
     */
     
    /**
     * Gets all property values for the hasName property.<p>
     * 
     * @returns a collection of values for the hasName property.
     */
    Collection<? extends String> getHasName();

    /**
     * Checks if the class has a hasName property value.<p>
     * 
     * @return true if there is a hasName property value.
     */
    boolean hasHasName();

    /**
     * Adds a hasName property value.<p>
     * 
     * @param newHasName the hasName property value to be added
     */
    void addHasName(String newHasName);

    /**
     * Removes a hasName property value.<p>
     * 
     * @param oldHasName the hasName property value to be removed.
     */
    void removeHasName(String oldHasName);



    /* ***************************************************
     * Property http://www.semanticweb.org/lucas/ontologies/2016/9/stroke#hasRiskLevel
     */
     
    /**
     * Gets all property values for the hasRiskLevel property.<p>
     * 
     * @returns a collection of values for the hasRiskLevel property.
     */
    Collection<? extends Object> getHasRiskLevel();

    /**
     * Checks if the class has a hasRiskLevel property value.<p>
     * 
     * @return true if there is a hasRiskLevel property value.
     */
    boolean hasHasRiskLevel();

    /**
     * Adds a hasRiskLevel property value.<p>
     * 
     * @param newHasRiskLevel the hasRiskLevel property value to be added
     */
    void addHasRiskLevel(Object newHasRiskLevel);

    /**
     * Removes a hasRiskLevel property value.<p>
     * 
     * @param oldHasRiskLevel the hasRiskLevel property value to be removed.
     */
    void removeHasRiskLevel(Object oldHasRiskLevel);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
